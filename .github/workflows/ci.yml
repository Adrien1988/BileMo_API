name: CI

on:
  push:
    branches: ['**']        # toutes les branches
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    # ðŸ‘‰  les variables dâ€™env. sont visibles par TOUTES les Ã©tapes du job
    env:
      APP_ENV: test
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}

    steps:
      # 1. Checkout
      - uses: actions/checkout@v4

      # 2. PHP 8.1 + Xdebug (couverture)
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug
          tools: composer:v2

      # 3. Cache Composer
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      # 3 bis. URL SQLite pour Symfony
      - name: Provide DATABASE_URL
        run: echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db" >> $GITHUB_ENV

      # 4. DÃ©pendances
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      # ðŸ‘‰ 4 bis. (facultatif) RegÃ©nÃ©rer les clÃ©s JWT dans le runner
      - name: Generate / overwrite JWT keys
        run: php bin/console lexik:jwt:generate-keypair --overwrite -n

      # 5. PHPStan
      - name: Static analysis (PHPStan)
        run: composer phpstan

      # 6. PHPUnit + couverture Clover
      - name: Run PHPUnit (with coverage)
        run: vendor/bin/phpunit --configuration=phpunit.xml --coverage-clover build/logs/clover.xml

      # 7. Upload couverture vers Codacy
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: build/logs/clover.xml

  code-style:
    name: Code Style Check
    runs-on: ubuntu-latest

    env:                     # ðŸ”¸ pas indispensable, mais Ã©vite les Â« passphrase Â» manquantes
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer

      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db" >> $GITHUB_ENV

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP-CS-Fixer (dry-run)
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Run PHP_CodeSniffer
        run: vendor/bin/phpcs
